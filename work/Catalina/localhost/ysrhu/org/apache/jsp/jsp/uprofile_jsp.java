/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-10-17 06:58:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import com.usersDao;
import com.usersBean;
import com.LoginDao;
import com.LoginBean;

public final class uprofile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("com.LoginBean");
    _jspx_imports_classes.add("com.LoginDao");
    _jspx_imports_classes.add("com.usersDao");
    _jspx_imports_classes.add("com.usersBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      com.usersBean obj = null;
      obj = (com.usersBean) _jspx_page_context.getAttribute("obj", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (obj == null){
        obj = new com.usersBean();
        _jspx_page_context.setAttribute("obj", obj, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("obj"), request);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      com.LoginBean objL = null;
      objL = (com.LoginBean) _jspx_page_context.getAttribute("objL", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (objL == null){
        objL = new com.LoginBean();
        _jspx_page_context.setAttribute("objL", objL, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("objL"), request);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Sesssion Management -->\r\n");
if(null == session.getAttribute("theName")){  
  // User is not logged in.
  out.println("your Session has expired");
  response.sendRedirect("../index.html?invalid=0");
}

      out.write("\r\n");
      out.write("<!-- End of Sesssion Management -->\r\n");

Integer vuserid	= (Integer) session.getAttribute("theId");
	String act = request.getParameter("act"); 
	String vname = request.getParameter("txtName");
	String vlname = request.getParameter("txtLName");
	String vpswd = request.getParameter("txtPswd");
	String vrole = request.getParameter("txtRole");
	String vphone = request.getParameter("txtPhone");
	String vemail = request.getParameter("txtEmail");
	
	Integer oid	= (Integer) session.getAttribute("theOid");
 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"../styles/text.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("<title> User Management </title>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function checkForm()\r\n");
      out.write("{ 	\r\n");
      out.write("			if (FrmUser.txtAct.value=\"insert\"){\r\n");
      out.write("			if (!FrmUser.txtName.value){\r\n");
      out.write("				alert(\"Name Can't be empty\")\r\n");
      out.write("					FrmUser.txtName.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("			if (!FrmUser.txtLName.value){\r\n");
      out.write("				alert(\"Login name can't be empty and should be Unique\")\r\n");
      out.write("					FrmUser.txtLName.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("			if (!FrmUser.txtPswd.value){\r\n");
      out.write("				alert(\"password can't be empty\")\r\n");
      out.write("					FrmUser.txtPswd.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("			if (!FrmUser.txtRole.value){\r\n");
      out.write("				alert(\"Choose Role ............\")\r\n");
      out.write("					FrmUser.txtRole.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("			if (!FrmUser.txtPhone.value){\r\n");
      out.write("				alert(\"Phone no can't be empty\")\r\n");
      out.write("					FrmUser.txtPhone.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("			if (!FrmUser.txtEmail.value){\r\n");
      out.write("				alert(\"Email can't be empty\")\r\n");
      out.write("					FrmUser.txtEmail.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("		}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

Integer vid=0;
int DisRow=0;

if ("Update".equalsIgnoreCase(act)){
	
	obj.setUser_id(Integer.parseInt(request.getParameter("txtUserid")));
	obj.setUser_name(request.getParameter("txtName"));
	obj.setLogin_name(request.getParameter("txtLName"));
	obj.setUser_password(request.getParameter("txtPswd"));
	obj.setUser_role(Integer.parseInt(request.getParameter("txtRole")));
	obj.setContact_phone(request.getParameter("txtPhone"));
	obj.setEmail(request.getParameter("txtEmail"));
	obj.setDesignation(request.getParameter("txtDesignation"));
	usersDao user = new usersDao();
	user.updateUser(obj);
}



      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name=\"FrmUserEdit\" action=\"uprofile.jsp\" method=\"post\">\r\n");
      out.write("<table class=\"mytable\" >\r\n");
      out.write("	<tr>\r\n");
      out.write("			<td align=\"right\" colspan=\"7\">\r\n");
      out.write("			<button type=\"submit\" class=\"button-image\" id=\"act\" name=\"act\" value=\"Update\"> <img src=\"../images/icon_save.png\"  height=\"30\" width=\"30\" alt=\"Save\" /></button>  \r\n");
      out.write("			<button type=\"submit\" class=\"button-image\" id=\"act\" name=\"act\" value=\"Cancel\"> <img src=\"../images/icon_delete.png\"  height=\"30\" width=\"30\" alt=\"Cancel\" /></button> \r\n");
      out.write("			</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<table class=\"mytable\">\r\n");
      out.write("<tr valign=\"top\"> \r\n");
      out.write("<td class=\"boxcontainer\">\r\n");
      out.write("<div class=\"\">\r\n");
      out.write("  <div class=\"titlebox\" id=\"\">\r\n");
      out.write("  <div class=\"titlebox-title\">\r\n");
      out.write("        <span class=\"left\">Edit Profile</span>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"titlebox-content \" id=\"t1\">\r\n");
      out.write("  <hr class=\"clear\" />\r\n");
      out.write("  <table class=\"ticket-list collection-as-table\">\r\n");
      out.write("   <tr class=\"collection-as-table\">\r\n");
      out.write("	");

	obj.setUser_id(vuserid);
	usersDao user = new usersDao();
	user.searchUser(obj);
		{ 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	<tr><td class=\"Blue-content\">User ID</td><td><input type=\"text\" readonly name=\"txtUserid\" size=\"3\" class=\"content style1\" value=");
      out.print(obj.getUser_id());
      out.write(" ></td></tr>\r\n");
      out.write("	<tr><td class=\"Blue-content\">Name</td><td><input type=\"text\" name=\"txtName\" class=\"content style1\" value=");
      out.print(obj.getUser_name());
      out.write("> </td></tr>\r\n");
      out.write("	<tr><td class=\"Blue-content\">Login Name</td><td><input type=\"text\" readonly name=\"txtLName\" class=\"content style1\" value=");
      out.print(obj.getLogin_name());
      out.write("> </td></tr>\r\n");
      out.write("	<tr><td class=\"Blue-content\">Password</td><td><input type=\"password\" name=\"txtPswd\" class=\"content style1\" value=");
      out.print(obj.getUser_password());
      out.write("></td></tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr><td class=\"Blue-content\">Role</td><td>\r\n");
      out.write("<select id=\"role\" name=txtRole size=\"1\" class=\"content style1\">\r\n");
      out.write("	<option value=\"0\">--Please Select--</option>\r\n");
      out.write("		");

		LoginDao login = new LoginDao();
		List<LoginBean> list =login.listRoles(oid);
		Iterator<LoginBean> S = list.iterator(); 
		while (S.hasNext()) {
		objL = (LoginBean)S.next();
		
      out.write("\r\n");
      out.write("	<option value=\"");
      out.print(objL.getRole_id());
      out.write('"');
      out.write('>');
      out.print(objL.getRole_desc());
      out.write("</option>\r\n");
      out.write("		");
 if(Integer.parseInt(objL.getRole_id())==obj.getUser_role()){
      out.write("\r\n");
      out.write("	<option value=\"");
      out.print(objL.getRole_id());
      out.write("\" selected >");
      out.print(objL.getRole_desc());
      out.write("</option> \r\n");
 }
		} 
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td class=\"Blue-content\">Phone</td><td><input type=\"text\" name=\"txtPhone\" size=\"10\" class=\"content style1\" value=");
      out.print(obj.getContact_phone());
      out.write("></td></tr>\r\n");
      out.write("<tr><td class=\"Blue-content\">Email</td><td><input type=\"text\" name=\"txtEmail\" size=\"30\" class=\"content style1\" value=");
      out.print(obj.getEmail());
      out.write("></td></tr>\r\n");
      out.write(" ");
 } 	
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" </table>\r\n");
      out.write(" </div>\r\n");
      out.write(" </div>\r\n");
      out.write(" </div>\r\n");
      out.write(" </td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" </table>\r\n");
      out.write(" </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
