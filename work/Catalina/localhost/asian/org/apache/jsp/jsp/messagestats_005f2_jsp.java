/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-10-05 11:31:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com. ConnectionProvider;

public final class messagestats_005f2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


Connection con=null;
ResultSet rs=null;
Statement stmt=null;
String query="";

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com. ConnectionProvider");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(" \n");
      out.write("\n");
      out.write("<!-- Sesssion Management -->\n");
if(null == session.getAttribute("theName")){  
  // User is not logged in.
  out.println("your Session has expired");
  response.sendRedirect("../index.html?invalid=0");
}

      out.write("\n");
      out.write("<!-- End of Sesssion Management -->\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<TITLE></TITLE>\n");
      out.write("<link href=\"../styles/text.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");

con =  ConnectionProvider.getCon();
stmt=con.createStatement();

      out.write("\n");
      out.write("<!--<table width=\"100%\" border=\"1\" class=border cellpadding=\"0\" cellspacing=\"5\" >\n");
      out.write("<tr><td class=\"Red-content\" align=\"center\" colspan=\"2\">Messages Proccessing<br>(Last 12 hours)</td></tr>\n");

//rs=stmt.executeQuery("select 1 as sl,'Processed' as type,count(1) as messages  from ozekimessagein_backup where processed_date >=CURRENT_TIMESTAMP - INTERVAL '12 HOUR'  union select 2 as sl,'Pending' as type,count(1) as messages from ozekimessagein order by 1");
rs=stmt.executeQuery("select 2 as sl,'Pending' as type,count(1) as messages from ozekimessagein order by 1");
while(rs.next()){
      out.write("\n");
      out.write("<tr><td class=\"Blue-content\">");
      out.print(rs.getString(2));
      out.write("</td><td class=\"content style1\">");
      out.print(rs.getString(3));
      out.write("</td></tr>\n");
 } 
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<tr><td class=\"red-content\" align=\"center\" colspan=\"5\">Top 10 Hottest Places<br>(Last 24 hours)</td></tr>\n");
      out.write("   \n");
      out.write("<tr>\n");
      out.write("<td class=\"red-content\">clientid</td>\n");
      out.write("<td class=\"red-content\">Location</td>\n");
      out.write("<td class=\"red-content\">Block</td>\n");
      out.write("<td class=\"red-content\">District</td>\n");
      out.write("<td class=\"red-content\">Temperature<br>(degrees)</td>\n");
      out.write("</tr>\n");
      out.write("\n");
      out.write("\n");
 
query="select x.clientid,location,(select group_value from parameter where param_id=sc.county) as county,(select group_value from parameter where param_id=sc.district) as district,round(cast(temp as decimal),2) as temp from (select clientid,max((case when temp >50 then 0 else temp end) ) as temp from data_packets where packet_date >=CURRENT_TIMESTAMP - INTERVAL '24 HOUR' and temp !=0 group by clientid order by temp desc) as x, station_configs_det as sc where x.clientid=sc.clientid LIMIT 10";

rs=stmt.executeQuery(query);
while(rs.next()){
      out.write("\n");
      out.write("<tr><td class=\"Blue-content\">");
      out.print(rs.getString(1));
      out.write("</td>\n");
      out.write("<td class=\"Blue-content\">");
      out.print(rs.getString(2));
      out.write("</td>\n");
      out.write("<td class=\"Blue-content\">");
      out.print(rs.getString(3));
      out.write("</td>\n");
      out.write("<td class=\"Blue-content\">");
      out.print(rs.getString(4));
      out.write("</td>\n");
      out.write("<td class=\"content style1\">");
      out.print(rs.getString(5));
      out.write("&nbsp;&deg;C</td></tr>\n");
 } 
      out.write("\n");
      out.write("</table>\n");
      out.write("-->\n");
      out.write("\n");
      out.write("<table width=\"100%\" class=\"border\" border=\"1\" cellpadding=\"0\" cellspacing=\"5\" id=\"stretch\" >\n");
      out.write("<tr><td class=\"red-content\" align=\"center\" colspan=\"5\">Top 20 Rainfall Areas(updated from 08.30 AM)</td></tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("<tr>\n");
      out.write("<td class=\"red-content\">clientid</td>\n");
      out.write("<td class=\"red-content\">Location</td>\n");
      out.write("<td class=\"red-content\">Block</td>\n");
      out.write("<td class=\"red-content\">District</td>\n");
      out.write("<td class=\"red-content\">cummulative<br>rain(mm)</td>\n");
      out.write("</tr>\n");
      out.write("\n");
 
query="select x.clientid,location,(select group_value from parameter where param_id=sc.county) as county,(select group_value from parameter where param_id=sc.district) as district,round(cast(rain as decimal),2) as rain from (select clientid,max(rain) as rain from data_packets where packet_date >current_date+INTERVAL '8.5 HOUR' and packet_date >current_date-1+INTERVAL '8.5 HOUR'  and rain !=0 and clientid<10840 and packet_type='D' group by clientid order by rain desc) as x, station_configs_det as sc where x.clientid=sc.clientid LIMIT 20";

rs=stmt.executeQuery(query);
while(rs.next()){
      out.write("\n");
      out.write("\n");
      out.write("<tr><td class=\"Blue-content\">");
      out.print(rs.getString(1));
      out.write("</td>\n");
      out.write("<td class=\"Blue-content\">");
      out.print(rs.getString(2));
      out.write("</td>\n");
      out.write("<td class=\"Blue-content\">");
      out.print(rs.getString(3));
      out.write("</td>\n");
      out.write("<td class=\"Blue-content\">");
      out.print(rs.getString(4));
      out.write("</td>\n");
      out.write("<td class=\"content style1\">");
      out.print(rs.getString(5));
      out.write("&nbsp;mm</td></tr>\n");
 } 
      out.write("\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
