/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-11-28 06:10:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.reports;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.ConnectionProvider;
import java.text.*;

public final class reported_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


Connection con=null;
ResultSet rs=null;
Statement stmt=null;
Statement stmt2=null;
String query="";
int count;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.ConnectionProvider");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("\n");
      out.write("function parameter(){\n");
      out.write("var vid1 = document.getElementById(\"state\").value\n");
      out.write("		if (vid1==null || vid1==\"\"){vid1=0;}\n");
      out.write("var vid2 = document.getElementById(\"district\").value\n");
      out.write("		if (vid2==null || vid2==\"\"){vid2=0;}\n");
      out.write("var vid3 = 0\n");
      out.write("var vid4 = 0\n");
      out.write("//var vid3 = document.getElementById(\"county\").value\n");
      out.write("//		if (vid3==null || vid3==\"\"){vid3=0;}\n");
      out.write("//var vid4 = document.getElementById(\"location\").value\n");
      out.write("//		if (vid4==null || vid4==\"\"){vid4=0;}\n");
      out.write("var vfdate= document.getElementById(\"fdate\").value\n");
      out.write("var vtdate= document.getElementById(\"tdate\").value\n");
      out.write("//var vparam= document.getElementById(\"param\").value\n");
      out.write("window.location.replace(\"reported.jsp?value1=\"+vid1+\"&&value2=\"+vid2+\"&&value3=\"+vid3+\"&&value4=\"+vid4+\"&&vfdate=\"+vfdate+\"&&vtdate=\"+vtdate);\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');

String value1=request.getParameter("value1");
String value2=request.getParameter("value2");
String value3=request.getParameter("value3");
String value4=request.getParameter("value4");
if (value1==null){value1="0";}
if (value2==null){value2="0";}
if (value3==null){value3="0";}
if (value4==null){value4="0";}

String vfdate=request.getParameter("vfdate");
String vtdate=request.getParameter("vtdate");

DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
String formattedDate = df.format(new java.util.Date());

if(vfdate == null){ 
 vfdate=formattedDate;
 vtdate=formattedDate;
}

con = ConnectionProvider.getCon();
stmt=con.createStatement();
stmt2=con.createStatement();
rs = stmt.executeQuery("select param_id as sid,group_value as state from parameter where active='Y' and group_family='LOCATION' and Group_name='STATE'");

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link href=\"../../styles/text.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<script type=\"text/javascript\" src=\"../../Script/datepicker.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<table width=\"100%\" border=\"1\" cellpadding=\"1\"  bgcolor=\"#DBEBFF\" VALIGN=TOP>\n");
      out.write("<tr><td width=\"10%\" VALIGN=TOP>\n");
      out.write("<table width=\"10%\" border=\"1\" cellpadding=\"1\"  bgcolor=\"#DBEBFF\" VALIGN=TOP>\n");
      out.write("<!--   date selection starts here -->\n");
      out.write("\n");
      out.write("<tr><td class=\"Blue-content\" colspan=\"4\"><b>Select Date Range</b></td></tr>\n");
      out.write("<tr><td class=\"content style1\" align=\"right\"><b>From</b></td>\n");
      out.write("<td><input id=\"fdate\"  class=\"content style1\" type=\"text\" name=\"fdate\" size=\"10\" maxlength=\"10\" value=");
      out.print(vfdate);
      out.write(">\n");
      out.write("<a href=\"javascript:NewCal('fdate','ddmmyyyy',false)\"><img src=\"../../images/calendar.JPG\" width=\"16\" height=\"16\" border=\"0\" alt=\"Pick a date\"></a></td>\n");
      out.write("</tr>\n");
      out.write("<tr><td class=\"content style1\" align=\"right\"><b>To</b></td>\n");
      out.write("<td><input id=\"tdate\"  class=\"content style1\" type=\"text\" name=\"tdate\" size=\"10\" maxlength=\"10\" value=");
      out.print(vtdate);
      out.write(">\n");
      out.write("<a href=\"javascript:NewCal('tdate','ddmmyyyy',false)\"><img src=\"../../images/calendar.JPG\" width=\"16\" height=\"16\" border=\"0\" alt=\"Pick a date\"></a></td>\n");
      out.write("</tr>\n");
      out.write("\n");
      out.write(" <!-- date selection Ends here -->\n");
      out.write("<tr><td class=\"Blue-content\" colspan=\"6\" align=\"left\">Select Station</td></tr>\n");
      out.write("<tr><td class=\"content style1\"><b> State </b></td>\n");
      out.write("<td>\n");
      out.write("<select id=\"state\" onchange=\"parameter()\" class=\"content style1\">\n");
      out.write("<option value=\"0\">--Please Select--</option>\n");
 while(rs.next()){ 
      out.write("\n");
      out.write("<option value=\"");
      out.print(rs.getInt("sid"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("state"));
      out.write("</option>\n");
      out.write("\n");
 if(rs.getString("sid").equals(value1)){
      out.write("\n");
      out.write("<option value=\"");
      out.print(value1);
      out.write("\" selected disabled>");
      out.print(rs.getString("state"));
      out.write("</option> \n");

}

}

      out.write("\n");
      out.write("</select> </td></tr>\n");
      out.write("<tr><td class=\"content style1\"><b> District</b> </td><td>\n");
      out.write("<select id=\"district\" onchange=\"parameter()\" class=\"content style1\">\n");
      out.write("<option value=\"0\">--Please Select--</option>\n");
      out.write("<option value=\"-1\">All</option>\n");

rs=stmt.executeQuery("select param_id as did,group_value as district from parameter where active='Y' and group_family='LOCATION' and Group_name='DISTRICT' and parent_group='"+value1+"'");
while(rs.next()){

      out.write("\n");
      out.write("<option value=\"");
      out.print(rs.getInt("did"));
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(rs.getString("district"));
      out.write("</option>\n");
 
	if(rs.getString("did").equals(value2)){
      out.write("\n");
      out.write("<option value=\"");
      out.print(value2);
      out.write("\" selected disabled>");
      out.print(rs.getString("district"));
      out.write("</option>\n");

			//updating the Audit_table
		count=stmt2.executeUpdate("insert into audit_table values((select user_id from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),(select user_role from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),'% Reported','now()')");
  //end of auditing
}
}

      out.write("\n");
      out.write("</select>\n");
      out.write("</td></tr>\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("</td>\n");
      out.write("<td valign=top>\n");
      out.write("<table width=\"100%\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\" id=\"stretch\" > \n");
      out.write("<tr class=\"Blue-content\" align=\"center\"><td >District</td>\n");
      out.write("<td>Total</td>\n");
      out.write("<td>Not Reporting</td>\n");
      out.write("<td>90%-100% %</td>\n");
      out.write("<td>80% -90%</td>\n");
      out.write("<td>70%-80%</td>\n");
      out.write("<td>60%-70%</td>\n");
      out.write("<td>50%-60%</td>\n");
      out.write("<td>< 50%</td>\n");
      out.write("</tr>\n");
      out.write("\n");
      out.write("\n");
 if(value1.equalsIgnoreCase("0") & value2.equalsIgnoreCase("0")){
      out.write("\n");
      out.write("<tr><td colspan=7 class=\"readonly\" align=\"center\">Select Date and Location</td><tr>\n");
}
else if (!value1.equalsIgnoreCase("0") & !value2.equalsIgnoreCase("0")){
//query="select sum(case when percent >=90 then 1 end) as reporting90, sum(case when percent >=80 and percent <90 then 1 end) as reporting80";
//query=query+", sum(case when percent >=70 and percent <80 then 1 end)as reporting70,sum(case when percent >=60 and percent <70 then 1 end)as reporting60";
//query=query+",sum(case when percent >=50 and percent <60 then 1 end)as reporting50,sum(case when percent <50  then 1 end)as rep50less from ";
//query=query+"(select st.clientid,Percent from station_configs_det as st left outer join (select clientid,";
//query=query+"cast((count(distinct (to_Char(packet_date,'YYYYMMDD HH24')))/((EXTRACT(epoch FROM (to_date('01/06/2010 00:00','dd/mm/yyyy hh24:mi')+ INTERVAL '1 DAY'))- EXTRACT(epoch FROM to_date('01/05/2010','dd/mm/yyyy')))/3600))*100 as integer) as Percent  from data_packets ";
//query=query+"where packet_date between to_date('01/05/2010','dd/mm/yyyy') and to_date('01/06/2010 00:00','dd/mm/yyyy hh24:mi')+ INTERVAL '1 DAY' group by clientid ) as a on (st.clientid=a.clientid) where st.activate!=0";


query="select group_value as district,count(1) as Total,COALESCE(sum(case when percent is null then 1 end),0) as Norep,COALESCE(sum(case when percent >=90 then 1 end),0)as reporting90,COALESCE(sum(case when percent >=80 and percent <90 then 1 end),0) as reporting80,COALESCE(sum(case when percent >=70 and percent <80 then 1 end),0) as reporting70, COALESCE(sum(case when percent >=60 and percent <70 then 1 end),0) as reporting60, sum(case when percent >=50 and percent <60 then 1 end)as reporting50, sum(case when percent <50  then 1 end)as rep50less from (select st.clientid,district, st.datafreq,packet_count,minutes, minutes/st.datafreq,cast(packet_count*100/(minutes/st.datafreq) as integer) as Percent  from station_configs_det as st left outer join (select clientid,count(distinct (to_Char(packet_date,'YYYYMMDD HH24'))) as packet_count,((EXTRACT(epoch FROM to_date('"+vtdate+"','DD/MM/YYYY')+Interval '1 DAY')-EXTRACT(epoch FROM to_date('"+vfdate+"','DD/MM/YYYY')))/60) as minutes from data_packets  where packet_date between to_date('"+vfdate+"','DD/MM/YYYY') and to_date('"+vtdate+"','DD/MM/YYYY')+Interval '1 DAY' group by clientid) as a on (st.clientid=a.clientid) where st.activate!=0 ";

if(value2.equalsIgnoreCase("0")||value2.equalsIgnoreCase("-1"))
{
	query=query+" and state="+value1+") as x";

				//updating the Audit_table
		count=stmt2.executeUpdate("insert into audit_table values((select user_id from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),(select user_role from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),'% Reported','now()')");
  //end of auditing
}
else{
	query=query+" and district='"+value2+"') as x";
					}
query=query+"  left outer join parameter as y on (x.district=y.param_id) group by y.group_value order by district";
//out.println(query);
rs=stmt.executeQuery(query);
	while(rs.next()){

      out.write("\n");
      out.write("<tr align =\"center\" class=\"readonly\">\n");
      out.write("<td align=\"left\" >");
      out.print(rs.getString("district"));
      out.write("</td>\n");
      out.write("<td>");
      out.print(rs.getString("Total"));
      out.write("</td>\n");
      out.write("<td class=\"readonly\">");
      out.print(rs.getString("Norep"));
      out.write("</td>\n");
      out.write("<td class=\"readonly\">");
      out.print(rs.getString("reporting90"));
      out.write("</td>\n");
      out.write("<td class=\"readonly\">");
      out.print(rs.getString("reporting80"));
      out.write("</td>\n");
      out.write("<td class=\"readonly\">");
      out.print(rs.getInt("reporting70"));
      out.write("</td>\n");
      out.write("<td class=\"readonly\">");
      out.print(rs.getInt("reporting60"));
      out.write("</td>\n");
      out.write("<td class=\"readonly\">");
      out.print(rs.getInt("reporting50"));
      out.write("</td>\n");
      out.write("<td class=\"readonly\">");
      out.print(rs.getInt("rep50less"));
      out.write("</td>\n");
      out.write("</tr>\n");

}
}

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	</table>\n");
      out.write("</td></tr>\n");
      out.write("</table>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
