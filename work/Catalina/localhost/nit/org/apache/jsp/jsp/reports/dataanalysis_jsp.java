/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-10-17 06:50:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.reports;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ConnectionProvider;
import java.io.*;
import java.sql.*;
import java.text.*;

public final class dataanalysis_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


Connection con=null;
ResultSet rs=null;
Statement stmt=null;
Statement stmt2=null;
String query="";
int count;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(8);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.ConnectionProvider");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("function params(){\n");
      out.write("var vid1 = document.getElementById(\"state\").value\n");
      out.write("var vid2 =document.getElementById(\"district\").value\n");
      out.write("var vfdate= document.getElementById(\"fdate\").value\n");
      out.write("var vtdate= document.getElementById(\"tdate\").value\n");
      out.write("var vparam= document.getElementById(\"param\").value\n");
      out.write("window.location.replace(\"dataanalysis.jsp?value1=\"+vid1+\"&&value2=\"+vid2+\"&&vfdate=\"+vfdate+\"&&vtdate=\"+vtdate);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function expxl(){\n");
      out.write("var vid1 = document.getElementById(\"state\").value\n");
      out.write("var vid2 =document.getElementById(\"district\").value\n");
      out.write("var vfdate= document.getElementById(\"fdate\").value\n");
      out.write("var vtdate= document.getElementById(\"tdate\").value\n");
      out.write("var vparam= document.getElementById(\"param\").value\n");
      out.write("window.location.replace(\"dataanalysis.jsp?value1=\"+vid1+\"&&value2=\"+vid2+\"&&vfdate=\"+vfdate+\"&&vtdate=\"+vtdate+\"&&param=\"+vparam);\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write('\n');

String value1=request.getParameter("value1");
String value2=request.getParameter("value2");
String vfdate=request.getParameter("vfdate");
String vtdate=request.getParameter("vtdate");
String vparam=request.getParameter("param");

if (value1==null){value1="0";}
if (value2==null){value2="0";}


DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
String formattedDate = df.format(new java.util.Date());


if(vfdate == null){ 
 vfdate=formattedDate;
 vtdate=formattedDate;
}

con = ConnectionProvider.getCon();
stmt=con.createStatement();
stmt2=con.createStatement();
rs = stmt.executeQuery("select param_id as sid,group_value as state from parameter where active='Y' and group_family='LOCATION' and Group_name='STATE'");

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link href=\"../../styles/text.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<script type=\"text/javascript\" src=\"../../Script/datepicker.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<table width=\"100%\" border=\"1\" cellpadding=\"1\"  bgcolor=\"#DBEBFF\" VALIGN=TOP>\n");
      out.write("<tr><td width=\"10%\" VALIGN=TOP>\n");
      out.write("<table width=\"10%\" border=\"1\" cellpadding=\"1\"  bgcolor=\"#DBEBFF\" VALIGN=TOP>\n");
      out.write("\n");
      out.write("<!--   date selection starts here -->\n");
      out.write("\n");
      out.write("<tr><td class=\"Blue-content\" colspan=\"4\"><b>Select Date Range</b></td></tr>\n");
      out.write("<tr><td class=\"content style1\" align=\"right\"><b>From</b></td>\n");
      out.write("<td><input id=\"fdate\"  class=\"content style1\" type=\"text\" name=\"fdate\" size=\"10\" maxlength=\"12\" value=");
      out.print(vfdate);
      out.write(">\n");
      out.write("<a href=\"javascript:NewCal('fdate','ddmmyyyy',false)\"><img src=\"../../images/calendar.JPG\" width=\"16\" height=\"16\" border=\"0\" alt=\"Pick a date\"></a></td>\n");
      out.write("</tr>\n");
      out.write("<tr><td class=\"content style1\" align=\"right\"><b>To</b></td>\n");
      out.write("<td><input id=\"tdate\"  class=\"content style1\" type=\"text\" name=\"tdate\" size=\"10\" maxlength=\"12\" value=");
      out.print(vtdate);
      out.write(">\n");
      out.write("<a href=\"javascript:NewCal('tdate','ddmmyyyy',false)\"><img src=\"../../images/calendar.JPG\" width=\"16\" height=\"16\" border=\"0\" alt=\"Pick a date\"></a></td>\n");
      out.write("</tr>\n");
      out.write(" <!-- date selection Ends here -->\n");
      out.write("\n");
      out.write("<tr><td class=\"Blue-content\" colspan=\"6\" align=\"left\">Select Station</td></tr>\n");
      out.write("<tr><td class=\"content style1\"><b> State </b></td>\n");
      out.write("<td>\n");
      out.write("<select id=\"state\" onchange=\"params()\" class=\"content style1\">\n");
      out.write("<option value=\"0\">--Please Select--</option>\n");
 while(rs.next()){ 
      out.write("\n");
      out.write("<option value=\"");
      out.print(rs.getInt("sid"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("state"));
      out.write("</option>\n");
      out.write("\n");
 if(rs.getString("sid").equals(value1)){
      out.write("\n");
      out.write("<option value=\"");
      out.print(value1);
      out.write("\" selected disabled>");
      out.print(rs.getString("state"));
      out.write("</option> \n");

}

}

      out.write("\n");
      out.write("</select> </td></tr>\n");
      out.write("<tr><td class=\"content style1\"><b> District</b> </td><td>\n");
      out.write("<select id=\"district\" onchange=\"params()\" class=\"content style1\">\n");
      out.write("<option value=\"0\">--Please Select--</option>\n");
      out.write("<option value=\"-1\">All</option>\n");
      out.write("\n");

rs=stmt.executeQuery("select param_id as did,group_value as district from parameter where active='Y' and group_family='LOCATION' and Group_name='DISTRICT' and parent_group='"+value1+"' order by group_value");

while(rs.next()){

      out.write("\n");
      out.write("<option value=\"");
      out.print(rs.getInt("did"));
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(rs.getString("district"));
      out.write("</option>\n");
 if(rs.getString("did").equals(value2)){
      out.write("\n");
      out.write("<option value=\"");
      out.print(value2);
      out.write("\" selected disabled>");
      out.print(rs.getString("district"));
      out.write("</option>\n");

	//updating the Audit_table
		count=stmt2.executeUpdate("insert into audit_table values((select user_id from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),(select user_role from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),'Data Analysis','now()')");
  //end of auditing
}
}

      out.write("\n");
      out.write("</select>\n");
      out.write("</td></tr>\n");
      out.write("</table>\n");
      out.write("</td>\n");
      out.write("<td valign=top>\n");
      out.write("\n");
      out.write("<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"stretch\" > \n");
      out.write("	<tr><td class=\"Headings\" align=\"center\" width=\"80%\">Data Analysis (Sensors)</td>\n");
      out.write("	<td align=\"right\"><input type=\"image\" src=\"../../images/excel.jpg\" alt=\"Submit\" name=\"param\" value=\"export\" onclick=\"expxl()\"></td>\n");
      out.write("	</tr>\n");
      out.write("\n");
      out.write("<tr><td colspan=2><table width=\"100%\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\" id=\"stretch\" > \n");
      out.write("<tr class=\"Blue-content\">\n");
      out.write("<td colspan=\"7\">&nbsp;</td>\n");
      out.write("<td colspan=\"6\" align=\"center\">Packets</td>\n");
      out.write("</tr>\n");
      out.write("<tr class=\"Blue-content\">\n");
      out.write("<td>Day</td><td>Client Id</td><td>District</td><td>Mandal</td><td>Location</td><td>Latitude</td><td>Longitude</td>\n");
      out.write("<td>Data</td><td>Temp</td><td>Rainfall</td><td>Humidity</td><td>Pressure</td><td>Wind</td>\n");
      out.write("</tr>\n");
      out.write("\n");
      out.write("<!-- exporting to excel -->\n");
 
String filename = "c:\\dataanalysis.csv";
FileWriter fw = new FileWriter(filename);

if ("export".equalsIgnoreCase(vparam)){
fw.append("Day,Client Id,District,Mandal,Location,Latitude,Longitude,Data Packets,Temp Packets,Rain Packets,Humidity Packets,Pressure PAckets,Wind Packets");
fw.append('\n');
}

      out.write("\n");
      out.write("\n");
      out.write("<!-- exporting to excel -->\n");
      out.write("\n");

query="select dp.* ,latitude,longitude,location,(select group_value from parameter where param_id=state) as state,(select group_value from parameter where param_id=district) as district,coalesce((select group_value from parameter where param_id=county),'-') as county ";
query=query+" from station_configs_det as st left outer join  ( select ";

//query=query+" case when to_char(packet_date,'HH24:MI') < '08:30' then to_char((packet_date-INTERVAL '1 DAY'),'DD/MM/YYYY') else to_char(packet_date,'MM/DD/YYYY') end as pdate, ";

query=query+" to_char(packet_date,'MM/DD/YYYY') as pdate,clientid,sum(case when packet_type ='D' then 1 else 0 end)as data_packets,sum(case when temp !=0 or temp is not null then 1 else 0 end)as temp_packets,sum(case when rain is not null then 1 else 0 end)as rain_packets, sum(case when local_pressure is not null then 1 else 0 end)as pressure_packets,sum(case when humidity is not null then 1 else 0 end)as humidity_packets, sum(case when wind is not null then 1 else 0 end)as wind_packets from data_packets  where packet_type='D' ";

//query=query+" and  packet_date >= to_date('"+vfdate+"','DD/MM/YYYY')+INTERVAL '8.5 HOUR' and packet_date < to_date('"+vtdate+"','DD/MM/YYYY')+ INTERVAL '32.5 HOUR' ";

query=query+" and  packet_date >= to_date('"+vfdate+"','DD/MM/YYYY') and packet_date < to_date('"+vtdate+"','DD/MM/YYYY')+ INTERVAL '24 HOUR' ";
query=query+" group by clientid,pdate ) as dp on st.clientid=dp.clientid where st.activate!=0 ";

if(value2.equalsIgnoreCase("-1")) {	query=query+" and state='"+value1+"'";
//updating the Audit_table
		count=stmt2.executeUpdate("insert into audit_table values((select user_id from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),(select user_role from users where user_role="+session.getAttribute("theRole")+" and login_name='"+session.getAttribute("theName")+"'),'Data Analysis','now()')");
  //end of auditing
  }
	else{ query=query+" and district='"+value2+"'";}

query=query+" order by clientid,pdate";
rs=stmt.executeQuery(query);


	rs=stmt.executeQuery(query);
	while(rs.next()){

      out.write("\n");
      out.write("<tr  class=\"readonly\">\n");
      out.write("<td>");
      out.print(rs.getString("pdate"));
      out.write("</td><td>");
      out.print(rs.getString("clientid"));
      out.write("</td><td>");
      out.print(rs.getString("district"));
      out.write("</td><td>");
      out.print(rs.getString("county"));
      out.write("</td>\n");
      out.write("<td>");
      out.print(rs.getString("location"));
      out.write("</td><td>");
      out.print(rs.getString("latitude"));
      out.write("</td><td>");
      out.print(rs.getString("longitude"));
      out.write("</td>\n");
      out.write("<td>");
      out.print(rs.getInt("data_packets"));
      out.write("\n");
      out.write("<td>");
      out.print(rs.getInt("temp_packets"));
      out.write("</td><td>");
      out.print(rs.getInt("rain_packets"));
      out.write("</td><td>");
      out.print(rs.getInt("humidity_packets"));
      out.write("</td>\n");
      out.write("<td>");
      out.print(rs.getInt("pressure_packets"));
      out.write("</td><td>");
      out.print(rs.getInt("wind_packets"));
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<!-- exporting to excel -->\n");

if ("export".equalsIgnoreCase(vparam)){
fw.append(rs.getString("pdate")); 
fw.append(',');
fw.append(rs.getString("clientid"));
fw.append(',');
fw.append(rs.getString("district"));
fw.append(',');
fw.append(rs.getString("county")); 
fw.append(',');
fw.append(rs.getString("location")); 
fw.append(',');
fw.append(rs.getString("latitude")); 
fw.append(',');
fw.append(rs.getString("longitude")); 
fw.append(',');
fw.append(rs.getString("data_packets")); 
fw.append(',');
fw.append(rs.getString("temp_packets")); 
fw.append(',');
fw.append(rs.getString("rain_packets")); 
fw.append(',');
fw.append(rs.getString("humidity_packets")); 
fw.append(',');
fw.append(rs.getString("pressure_packets")); 
fw.append(',');
fw.append(rs.getString("wind_packets")); 
fw.append(',');
fw.append('\n');
}

} 
fw.flush();
fw.close();



      out.write("\n");
      out.write("\n");
      out.write("</tr></table>\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	</table>\n");
      out.write("</td></tr>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
