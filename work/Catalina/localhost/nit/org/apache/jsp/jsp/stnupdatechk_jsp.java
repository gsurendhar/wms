/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-10-17 06:44:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ConnectionProvider;
import java.sql.*;

public final class stnupdatechk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.ConnectionProvider");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("\r\n");

	response.setContentType("text/html");
String sid=request.getParameter("sid");
String did=request.getParameter("did");

//out.println(sid);
//out.println(did);

String vtxtcounty=request.getParameter("optCounty");
String vtxtdistrict=request.getParameter("optDistrict");
String vtxtclientid=request.getParameter("txtclientid");
String vtxtLocation=request.getParameter("txtLocation");
String vtxtAddress=request.getParameter("txtAddress");
String vtxtLongitude=request.getParameter("txtLongitude");
String vtxtLatitude=request.getParameter("txtLatitude");
String vtxtAltitude=request.getParameter("txtAltitude");
String vtxtstn_sim=request.getParameter("txtstn_sim");
String vtxtdatafreq=request.getParameter("txtdatafreq");
String vtxtcommfreq=request.getParameter("txtcommfreq");
String vtxtwindavg=request.getParameter("txtwindavg");
String vtxtcalibrationrain=request.getParameter("txtcalibrationrain");
String vtxtcalibrationwind=request.getParameter("txtcalibrationwind");
String vtxtsrv_sim=request.getParameter("txtsrv_sim");
String vtxtsrv_sim_bkp1=request.getParameter("txtsrv_sim_bkp1");
String vtxtsrv_sim_bkp2=request.getParameter("txtsrv_sim_bkp2");
/*String vtxtparamtime1=request.getParameter("txtparamtime1");
String vtxtparamtime2=request.getParameter("txtparamtime2");
String vtxtparamtime3=request.getParameter("txtparamtime3");
String vtxtfutureexpansion=request.getParameter("txtfutureexpansion");
String vtxtnumsettings=request.getParameter("txtnumsettings");
String vtxtphnumbers=request.getParameter("txtphnumbers");
String vtxtactivate=request.getParameter("txtactivate");
String vtxtwatchdog=request.getParameter("txtwatchdog");
String vtxtflash=request.getParameter("txtflash"); */
String vtxtcontact_phone=request.getParameter("txtcontact_phone");
String vtxtcontact_person=request.getParameter("txtcontact_person");
//String vtxtadditionalcommands=request.getParameter("txtadditionalcommands");
String vtxtemailid=request.getParameter("txtemailid");
String cmd=request.getParameter("action");
String vtxtcalias=request.getParameter("txtCalias");

String vtxtoperator=request.getParameter("optOperartor");
//out.println(vtxtcounty);
out.println(vtxtoperator);

	Connection con=null;
	ResultSet rs=null;
	Statement stmt=null;
	String query="";


    try{
        con = ConnectionProvider.getCon();
		stmt=con.createStatement();
	}catch(Exception e){
			System.out.println(e.getMessage());
		  }

  if(cmd.equalsIgnoreCase("save"))
  {
     
    
       query= "update station_configs_det set location='"+vtxtLocation+"',Longitude='"+vtxtLongitude+"',Latitude='"+vtxtLatitude+"', Altitude='"+vtxtAltitude+"', stn_sim='"+vtxtstn_sim+"', datafreq='"+vtxtdatafreq+"', commfreq='"+vtxtcommfreq+"', windavg='"+vtxtwindavg+"', calibrationrain='"+vtxtcalibrationrain+"', calibrationwind='"+vtxtcalibrationwind+"', srv_sim='"+vtxtsrv_sim+"', srv_sim_bkp1='"+vtxtsrv_sim_bkp1+"', srv_sim_bkp2='"+vtxtsrv_sim_bkp2+"',  contact_person='"+vtxtcontact_person+"', contact_phone='"+vtxtcontact_phone+"', emailid='"+vtxtemailid+"',address='"+vtxtAddress+"'";
       if (vtxtcalias!=null){ query+=",client_alias='"+vtxtcalias+"'";}
	   if (vtxtcounty!=null){ query=query+" ,county='"+vtxtcounty+"'";}
	   if (vtxtdistrict!=null){query=query+" ,district='"+vtxtdistrict+"'";	}
		  
		if (vtxtoperator!=null){
			query=query+" ,operator='"+vtxtoperator+"'";
		}
		 
		 query=query+" where clientid="+vtxtclientid;

	 out.println(query);
	  stmt.executeUpdate(query);
 //response.sendRedirect("/wms/jsp/StationConfig.jsp?value1="+sid+"&&value2="+did+"&&value3=0&&value4="+vtxtclientid);	  
	}

  if(cmd.equalsIgnoreCase("insert"))
  {
       
		   //query= "Insert into station_configs_det(clientid,location,Longitude,Latitude,Altitude,stn_sim,datafreq,commfreq,paramtime1,paramtime2,paramtime3,windavg,calibrationrain,calibrationwind,srv_sim,srv_sim_bkp1,srv_sim_bkp2,futureexpansion,numsettings,phnumbers,activate,watchdog,flash,contact_person,additionalcommands,emailid,address,state,district,county)  values ("+vtxtclientid+", '"+vtxtLocation+"', '"+vtxtLongitude+"','"+vtxtLatitude+"', '"+vtxtAltitude+"','"+vtxtstn_sim+"','"+vtxtdatafreq+"', '"+vtxtcommfreq+"','"+vtxtparamtime1+"','"+vtxtparamtime2+"','"+vtxtparamtime3+"','"+vtxtwindavg+"','"+vtxtcalibrationrain+"','"+vtxtcalibrationwind+"','"+vtxtsrv_sim+"','"+vtxtsrv_sim_bkp1+"','"+vtxtsrv_sim_bkp2+"','"+vtxtfutureexpansion+"','"+vtxtnumsettings+"','"+vtxtphnumbers+"','"+vtxtactivate+"','"+vtxtwatchdog+"','"+vtxtflash+"','"+vtxtcontact_person+"','"+vtxtadditionalcommands+"','"+vtxtemailid+"','"+vtxtAddress+"',"+sid+","+did+","+vtxtcounty+")";
	   query= "Insert into station_configs_det(clientid,location,Longitude,Latitude,Altitude,stn_sim,datafreq,commfreq,windavg,calibrationrain,calibrationwind,srv_sim,srv_sim_bkp1,srv_sim_bkp2,contact_person,contact_phone,emailid,address,state,district,county,Operator)  values ("+vtxtclientid+", '"+vtxtLocation+"', '"+vtxtLongitude+"','"+vtxtLatitude+"', '"+vtxtAltitude+"','"+vtxtstn_sim+"','"+vtxtdatafreq+"', '"+vtxtcommfreq+"','"+vtxtwindavg+"','"+vtxtcalibrationrain+"','"+vtxtcalibrationwind+"','"+vtxtsrv_sim+"','"+vtxtsrv_sim_bkp1+"','"+vtxtsrv_sim_bkp2+"','"+vtxtcontact_person+"','"+vtxtcontact_phone+"','"+vtxtemailid+"','"+vtxtAddress+"',"+sid+","+did+",'"+vtxtcounty+"','"+vtxtoperator+"')";

	//out.println(query);
	stmt.executeUpdate(query);

//response.sendRedirect("/wms/jsp/StationConfig.jsp?value1="+sid+"&&value2="+did+"&&value3="+vtxtcounty+"&&value4="+vtxtclientid);
	}

//response.sendRedirect("/wms/jsp/StationConfig.jsp?value1="+sid+"&&value2="+did+"&&value3="+vtxtcounty+"&&value4="+vtxtclientid);
response.sendRedirect("StationConfig.jsp?search="+vtxtclientid);

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
